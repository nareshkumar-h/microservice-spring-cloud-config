# Set ApplicationName, Port, ContextPath
spring.application.name=auth-service
server.port=9001
server.contextPath=/auth-service

#security.oauth2.client.clientId: c2
#security.oauth2.client.clientSecret: p1
#security.oauth2.client.authorized-grant-types: authorization_code,refresh_token,password
#security.oauth2.client.scope: openid


security.oauth2.resource.user-info-uri: http://localhost:9001/auth-service/user

# ===============================
# = DATA SOURCE
# ===============================

# Set here configurations for the database connection

# Connection url for the database w/createDatabaseIfNotExist=true
spring.datasource.url = jdbc:mysql://localhost:3306/users_db?createDatabaseIfNotExist=true&useSSL=false
spring.database.driverClassName = com.mysql.jdbc.Driver
spring.jpa.database = MySQL
spring.datasource.platform = mysql

# Database - data initialization
spring.jpa.generate-ddl = true

# Username and password
spring.datasource.username = root
spring.datasource.password = root

# ===============================
# = JPA / HIBERNATE
# ===============================

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager).

# Show or not log for each sql query
spring.jpa.show-sql = true


# Transactions
spring.jpa.open-in-view = false

# Hibernate ddl auto (create, create-drop, update): with "update" the database
# schema will be automatically updated accordingly to java entities found in
# the project
spring.jpa.hibernate.ddl-auto = update

# Naming strategy
spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy

# spring.jpa.properties.hibernate.enable_lazy_load_no_trans=true
# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect

eureka.client.serviceUrl.defaultZone=http://127.0.0.1:8761/eureka/